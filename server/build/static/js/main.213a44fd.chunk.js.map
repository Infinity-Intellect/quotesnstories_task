{"version":3,"sources":["components/Landing/Landing.js","components/User/UserHome.js","components/Admin/AdminHome.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","Landing","props","useState","email_r","password_r","username_r","role_r","email_l","password_l","userData","setUserData","open","message","snackbar","setSnackbar","handleInputChange","e","target","name","value","useEffect","localStorage","removeItem","className","Snackbar","onClose","style","textAlign","TextField","label","variant","onChange","type","Select","MenuItem","Button","color","onClick","bodyData","email","username","password","role","post","then","response","data","affectedRows","catch","err","console","log","setItem","token","history","push","pathname","state","userdata","jwt","UserHome","setToken","location","useLocation","getItem","decoded","backgroundColor","size","isPermitted","AdminHome","tab","setTab","allUsers","setAllUsers","fetchUsers","jwtToken","get","headers","authorization","AppBar","position","Tabs","newVal","aria-label","Tab","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","filter","user","accountId","map","idx","key","component","scope","emailId","Switch","checked","newValue","put","userId","changePermission","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"iSAGMA,G,MAAQC,EAAQ,KACP,SAASC,EAAQC,GAAQ,IAAD,EACHC,mBAAS,CACrCC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,OAAQ,OACRC,QAAS,GACTC,WAAY,KAPmB,mBAC5BC,EAD4B,KAClBC,EADkB,OASHR,mBAAS,CAAES,MAAM,EAAOC,QAAS,KAT9B,mBAS5BC,EAT4B,KASlBC,EATkB,KAkD7BC,EAAoB,SAACC,GACvBN,EAAY,2BAAKD,GAAN,kBAAiBO,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAKzD,OAHAC,qBAAU,WACNC,aAAaC,WAAW,WACzB,IAEC,yBAAKC,UAAU,uBACX,kBAACC,EAAA,EAAD,CACIb,KAAME,EAASF,KACfc,QAAS,WAAQX,EAAY,2BAAKD,GAAN,IAAgBF,MAAM,EAAOC,QAAS,OAClEA,QAASC,EAASD,UAEtB,yBAAKW,UAAU,sBACX,wBAAIG,MAAO,CAAEC,UAAW,WAAxB,YACA,kBAACC,EAAA,EAAD,CAAWV,KAAK,UAAUW,MAAM,QAAQC,QAAQ,WAAWC,SAAUhB,IACrE,kBAACa,EAAA,EAAD,CAAWV,KAAK,aAAaW,MAAM,WAAWG,KAAK,WAAWF,QAAQ,WAAWC,SAAUhB,IAC3F,kBAACa,EAAA,EAAD,CAAWV,KAAK,aAAaW,MAAM,WAAWC,QAAQ,WAAWC,SAAUhB,IAC3E,kBAACkB,EAAA,EAAD,CACId,MAAOV,EAASH,OAChBwB,QAAQ,WACRC,SAAU,SAACf,GAAQN,EAAY,2BAAKD,GAAN,IAAgBH,OAAQU,EAAEC,OAAOE,WAG/D,kBAACe,EAAA,EAAD,CAAUf,MAAO,SAAjB,SACA,kBAACe,EAAA,EAAD,CAAUf,MAAO,QAAjB,SAEJ,kBAACgB,EAAA,EAAD,CAAQL,QAAQ,YACZM,MAAM,UAAUC,QApEJ,WACxB,IAAMC,EAAW,CACbC,MAAO9B,EAASN,QAASqC,SAAU/B,EAASJ,WAC5CoC,SAAUhC,EAASL,WAAYsC,KAAMjC,EAASH,QAE3B,KAAnBgC,EAASC,OAAsC,KAAtBD,EAASE,UAAyC,KAAtBF,EAASG,UAAqC,KAAlBH,EAASI,KAC1F5B,EAAY,2BAAKD,GAAN,IAAgBF,MAAM,EAAMC,QAAS,oBAGhDd,EAAM6C,KAAN,kBAA8BL,GAAUM,MAAK,SAAAC,GACrCA,EAASC,KAAKC,aAAe,GAC7BjC,EAAY,2BAAKD,GAAN,IAAgBF,MAAM,EAAMC,QAAS,8BAErDoC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAqDZ,aAGJ,yBAAK1B,UAAU,mBACX,wBAAIG,MAAO,CAAEC,UAAW,WAAxB,SACA,kBAACC,EAAA,EAAD,CAAWV,KAAK,UAAUW,MAAM,QAAQC,QAAQ,WAAWC,SAAUhB,IACrE,kBAACa,EAAA,EAAD,CAAWV,KAAK,aAAaW,MAAM,WAAWG,KAAK,WAAWF,QAAQ,WAAWC,SAAUhB,IAC3F,kBAACoB,EAAA,EAAD,CAAQL,QAAQ,YACZM,MAAM,YAAYC,QAzDT,WACrB,IAAMC,EAAW,CAAEC,MAAO9B,EAASF,QAASkC,SAAUhC,EAASD,YACxC,KAAnB8B,EAASC,OAAsC,KAAtBD,EAASG,SAClC3B,EAAY,2BAAKD,GAAN,IAAgBF,MAAM,EAAMC,QAAS,oBAGhDd,EAAM6C,KAAN,iBAA6BL,GAAUM,MAAK,SAAAC,GACpCA,EAASC,OACTzB,aAAa+B,QAAQ,QAASP,EAASC,KAAKO,OACjB,SAAvBR,EAASC,KAAKJ,KACdzC,EAAMqD,QAAQC,KAAK,CAAEC,SAAU,QAASC,MAAO,CAAEC,SAAUb,EAASC,QAExC,UAAvBD,EAASC,KAAKJ,MACnBzC,EAAMqD,QAAQC,KAAK,CAAEC,SAAU,SAAUC,MAAO,CAAEC,SAAUb,EAASC,YAG9EE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAuCZ,W,WCpFVU,EAAM5D,EAAQ,IACL,SAAS6D,EAAS3D,GAAQ,IAAD,EACVC,mBAAS,MADC,mBAC7BmD,EAD6B,KACtBQ,EADsB,OAEJ3D,mBAAS,MAFL,mBAE7BO,EAF6B,KAEnBC,EAFmB,KAG9BoD,EAAWC,cAYjB,OAXA3C,qBAAU,WACN,IAAMiC,EAAQhC,aAAa2C,QAAQ,SAC7BC,EAAUZ,EAAQM,EAAIN,GAAS,KACjCA,GAA0B,SAAjBY,EAAQvB,MACjBmB,EAASR,GACT3C,EAAYoD,EAASL,MAAMC,WAG3BzD,EAAMqD,QAAQC,KAAK,OAExB,CAACtD,EAAMqD,QAASQ,EAASL,MAAMC,WAC7BL,EAID,6BACI,yBAAK9B,UAAU,oBACX,kBAACY,EAAA,EAAD,CAAQL,QAAQ,YAAYM,MAAM,UAC9BC,QAAS,WAAQpC,EAAMqD,QAAQC,KAAK,OADxC,WAGJ,yBAAKhC,UAAU,oBACX,kBAACY,EAAA,EAAD,CAAQL,QAAQ,YAAYJ,MAAO,CAAEwC,gBAAiB,QAAS9B,MAAO,SAAW+B,KAAK,SAAtF,gBACC1D,EAAS2D,YAAc,kBAACjC,EAAA,EAAD,CAAQL,QAAQ,YAAYJ,MAAO,CAAEwC,gBAAiB,MAAO9B,MAAO,SAAW+B,KAAK,SAApF,cAAkH,KAV3I,4C,8FCfTrE,G,OAAQC,EAAQ,KAChB4D,EAAM5D,EAAQ,IACL,SAASsE,EAAUpE,GAAQ,IAAD,EACXC,mBAAS,MADE,mBAC9BmD,EAD8B,KACvBQ,EADuB,OAEL3D,mBAAS,MAFJ,mBAE9BO,EAF8B,KAEpBC,EAFoB,OAGfR,mBAAS,GAHM,mBAG9BoE,EAH8B,KAGzBC,EAHyB,OAILrE,mBAAS,IAJJ,mBAI9BsE,EAJ8B,KAIpBC,EAJoB,KAK/BX,EAAWC,cACXW,EAAa,SAACC,GAChB7E,EAAM8E,IAAN,SAAoB,CAChBC,QAAS,CACLC,cAAeH,KAEpB/B,MAAK,SAAAC,GACJ4B,EAAY5B,EAASC,SACtBE,OAAM,SAAAC,GAASC,QAAQC,IAAIF,OAyBlC,OAZA7B,qBAAU,WACN,IAAMiC,EAAQhC,aAAa2C,QAAQ,SAC7BC,EAAUZ,EAAQM,EAAIN,GAAS,KACjCA,GAA0B,UAAjBY,EAAQvB,MACjBmB,EAASR,GACT3C,EAAYoD,EAASL,MAAMC,UAC3BgB,EAAWrB,IAGXpD,EAAMqD,QAAQC,KAAK,OAExB,CAACtD,EAAMqD,QAASQ,EAASL,MAAMC,WAC7BL,EAID,6BACI,yBAAK9B,UAAU,aACX,kBAACwD,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,CAAM9D,MAAOmD,EAAKvC,SAAU,SAACf,EAAGkE,GAAaX,EAAOW,IAAWC,aAAW,uBACtE,kBAACC,EAAA,EAAD,CAAKvD,MAAM,SACX,kBAACuD,EAAA,EAAD,CAAKvD,MAAM,kBAIvB,yBAAKN,UAAU,oBACX,kBAACY,EAAA,EAAD,CAAQL,QAAQ,YAAYM,MAAM,UAC9BC,QAAS,WAAQpC,EAAMqD,QAAQC,KAAK,OADxC,WAGJ,yBAAKhC,UAAU,kBACF,IAAR+C,GACG,yBAAK/C,UAAU,oBACX,kBAACY,EAAA,EAAD,CAAQL,QAAQ,YAAYJ,MAAO,CAAEwC,gBAAiB,QAAS9B,MAAO,SAAW+B,KAAK,SAAtF,gBACC1D,EAAS2D,YAAc,kBAACjC,EAAA,EAAD,CAAQL,QAAQ,YAAYJ,MAAO,CAAEwC,gBAAiB,MAAO9B,MAAO,SAAW+B,KAAK,SAApF,cAAkH,IAGzI,IAARG,GACG,yBAAK/C,UAAU,oBACX,kBAAC8D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAW,qCACX,kBAACA,EAAA,EAAD,KAAW,yCACX,kBAACA,EAAA,EAAD,KAAW,sCACX,kBAACA,EAAA,EAAD,KAAW,6CAGnB,kBAACC,EAAA,EAAD,KACKlB,EAASmB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,YAAcpF,EAASoF,aAAWC,KAAI,SAACF,EAAMG,GAAP,OAChE,kBAACP,EAAA,EAAD,CAAUQ,IAAKD,GACX,kBAACN,EAAA,EAAD,CAAWQ,UAAU,KAAKC,MAAM,OAC3BH,EAAM,GAEX,kBAACN,EAAA,EAAD,KAAYG,EAAKO,SACjB,kBAACV,EAAA,EAAD,KAAYG,EAAKpD,UACjB,kBAACiD,EAAA,EAAD,KACI,kBAACW,EAAA,EAAD,CAAQC,QAA8B,IAArBT,EAAKxB,YAAkCrC,SAAU,YApErF,SAAC6D,EAAMU,GAC5BxG,EAAMyG,IAAN,+BAA0C,CAAEC,OAAQZ,EAAKC,UAAWS,SAAUA,GAAY,CACtFzB,QAAS,CACLC,cAAezB,KAEpBT,MAAK,SAAAC,GACJ6B,EAAWrB,MACZL,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MA6D4BwD,CAAiBb,EAA2B,IAArBA,EAAKxB,YAAoB,EAAI,iBA7CzF,4CC3BAsC,MAbf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIX,UAAWjG,IACjC,kBAAC,IAAD,CAAO2G,OAAK,EAACC,KAAK,QAAQX,UAAWrC,IACrC,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,SAASX,UAAW5B,IACtC,kBAAC,IAAD,CAAOuC,KAAK,IAAIX,UAAWjG,OCFf6G,QACW,cAA7BC,OAAOhD,SAASiD,UAEe,UAA7BD,OAAOhD,SAASiD,UAEhBD,OAAOhD,SAASiD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3E,MAAK,SAAA4E,GACJA,EAAaC,gBAEdzE,OAAM,SAAA0E,GACLxE,QAAQwE,MAAMA,EAAM9G,a","file":"static/js/main.213a44fd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { TextField, Button, Select, MenuItem, Snackbar } from '@material-ui/core'\r\nimport './Landing.css'\r\nconst axios = require('axios')\r\nexport default function Landing(props) {\r\n    const [userData, setUserData] = useState({\r\n        email_r: '',\r\n        password_r: '',\r\n        username_r: '',\r\n        role_r: 'user',\r\n        email_l: '',\r\n        password_l: ''\r\n    })\r\n    const [snackbar, setSnackbar] = useState({ open: false, message: \"\" })\r\n    const handleRegisterClick = () => {\r\n        const bodyData = {\r\n            email: userData.email_r, username: userData.username_r,\r\n            password: userData.password_r, role: userData.role_r\r\n        }\r\n        if (bodyData.email === \"\" || bodyData.username === \"\" || bodyData.password === \"\" || bodyData.role === \"\") {\r\n            setSnackbar({ ...snackbar, open: true, message: \"Empty Fields !\" })\r\n        }\r\n        else {\r\n            axios.post(`/account/create`, bodyData).then(response => {\r\n                if (response.data.affectedRows > 0) {\r\n                    setSnackbar({ ...snackbar, open: true, message: \"Success, Please Login\" })\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n    const handleLoginClick = () => {\r\n        const bodyData = { email: userData.email_l, password: userData.password_l }\r\n        if (bodyData.email === \"\" || bodyData.password === \"\") {\r\n            setSnackbar({ ...snackbar, open: true, message: \"Empty Fields !\" })\r\n        }\r\n        else {\r\n            axios.post(`/account/login`, bodyData).then(response => {\r\n                if (response.data) {\r\n                    localStorage.setItem(\"token\", response.data.token)\r\n                    if (response.data.role === \"user\") {\r\n                        props.history.push({ pathname: \"/user\", state: { userdata: response.data } })\r\n                    }\r\n                    else if (response.data.role === \"admin\") {\r\n                        props.history.push({ pathname: \"/admin\", state: { userdata: response.data } })\r\n                    }\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleInputChange = (e) => {\r\n        setUserData({ ...userData, [e.target.name]: e.target.value })\r\n    }\r\n    useEffect(() => {\r\n        localStorage.removeItem(\"token\")\r\n    }, [])\r\n    return (\r\n        <div className=\"component-container\">\r\n            <Snackbar\r\n                open={snackbar.open}\r\n                onClose={() => { setSnackbar({ ...snackbar, open: false, message: \"\" }) }}\r\n                message={snackbar.message}\r\n            />\r\n            <div className=\"register-container\">\r\n                <h1 style={{ textAlign: \"center\" }}>Register</h1>\r\n                <TextField name=\"email_r\" label=\"Email\" variant=\"outlined\" onChange={handleInputChange} />\r\n                <TextField name=\"password_r\" label=\"Password\" type=\"password\" variant=\"outlined\" onChange={handleInputChange} />\r\n                <TextField name=\"username_r\" label=\"Username\" variant=\"outlined\" onChange={handleInputChange} />\r\n                <Select\r\n                    value={userData.role_r}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => { setUserData({ ...userData, role_r: e.target.value }) }}\r\n                >\r\n\r\n                    <MenuItem value={\"admin\"}>admin</MenuItem>\r\n                    <MenuItem value={\"user\"}>user</MenuItem>\r\n                </Select>\r\n                <Button variant=\"contained\"\r\n                    color=\"primary\" onClick={handleRegisterClick}>Register</Button>\r\n            </div>\r\n            <div className=\"login-container\">\r\n                <h1 style={{ textAlign: \"center\" }}>Login</h1>\r\n                <TextField name=\"email_l\" label=\"Email\" variant=\"outlined\" onChange={handleInputChange} />\r\n                <TextField name=\"password_l\" label=\"Password\" type=\"password\" variant=\"outlined\" onChange={handleInputChange} />\r\n                <Button variant=\"contained\"\r\n                    color=\"secondary\" onClick={handleLoginClick}>Login</Button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { Button } from '@material-ui/core'\r\nimport './UserHome.css'\r\nconst jwt = require('jwt-decode')\r\nexport default function UserHome(props) {\r\n    const [token, setToken] = useState(null)\r\n    const [userData, setUserData] = useState(null)\r\n    const location = useLocation()\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\")\r\n        const decoded = token ? jwt(token) : null\r\n        if (token && decoded.role === \"user\") {\r\n            setToken(token)\r\n            setUserData(location.state.userdata)\r\n        }\r\n        else {\r\n            props.history.push(\"/\")\r\n        }\r\n    }, [props.history, location.state.userdata])\r\n    if (!token) {\r\n        return <div>Loading ...</div>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"logout-container\">\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                    onClick={() => { props.history.push(\"/\") }}>Logout</Button>\r\n            </div>\r\n            <div className=\"button-container\">\r\n                <Button variant=\"contained\" style={{ backgroundColor: \"green\", color: \"white\" }} size=\"large\">Access Green</Button>\r\n                {userData.isPermitted ? <Button variant=\"contained\" style={{ backgroundColor: \"red\", color: \"white\" }} size=\"large\">Access Red</Button> : \"\"}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport {\r\n    AppBar, Tabs, Tab, Button, TableContainer, TableHead, TableBody, TableRow, TableCell, Table, Switch\r\n} from '@material-ui/core'\r\nimport './AdminHome.css'\r\nconst axios = require('axios')\r\nconst jwt = require('jwt-decode')\r\nexport default function AdminHome(props) {\r\n    const [token, setToken] = useState(null)\r\n    const [userData, setUserData] = useState(null)\r\n    const [tab, setTab] = useState(1)\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const location = useLocation()\r\n    const fetchUsers = (jwtToken) => {\r\n        axios.get(`/users`, {\r\n            headers: {\r\n                authorization: jwtToken\r\n            }\r\n        }).then(response => {\r\n            setAllUsers(response.data)\r\n        }).catch(err => { console.log(err) })\r\n    }\r\n    const changePermission = (user, newValue) => {\r\n        axios.put(`/permission/changePermission`, { userId: user.accountId, newValue: newValue }, {\r\n            headers: {\r\n                authorization: token\r\n            }\r\n        }).then(response => {\r\n            fetchUsers(token)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\")\r\n        const decoded = token ? jwt(token) : null\r\n        if (token && decoded.role === \"admin\") {\r\n            setToken(token)\r\n            setUserData(location.state.userdata)\r\n            fetchUsers(token)\r\n        }\r\n        else {\r\n            props.history.push(\"/\")\r\n        }\r\n    }, [props.history, location.state.userdata])\r\n    if (!token) {\r\n        return <div>Loading ...</div>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={tab} onChange={(e, newVal) => { setTab(newVal) }} aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Home\" />\r\n                        <Tab label=\"Pemissions\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n            </div>\r\n            <div className=\"logout-container\">\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                    onClick={() => { props.history.push(\"/\") }}>Logout</Button>\r\n            </div>\r\n            <div className=\"body-container\">\r\n                {tab === 0 && (\r\n                    <div className=\"button-container\">\r\n                        <Button variant=\"contained\" style={{ backgroundColor: \"green\", color: \"white\" }} size=\"large\">Access Green</Button>\r\n                        {userData.isPermitted ? <Button variant=\"contained\" style={{ backgroundColor: \"red\", color: \"white\" }} size=\"large\">Access Red</Button> : \"\"}\r\n                    </div>\r\n                )}\r\n                {tab === 1 && (\r\n                    <div className=\"permission-table\">\r\n                        <TableContainer>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell><h2>S.No</h2></TableCell>\r\n                                        <TableCell><h2>Username</h2></TableCell>\r\n                                        <TableCell><h2>Email</h2></TableCell>\r\n                                        <TableCell><h2>Permission</h2></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {allUsers.filter(user => user.accountId !== userData.accountId).map((user, idx) => (\r\n                                        <TableRow key={idx}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {idx + 1}\r\n                                            </TableCell>\r\n                                            <TableCell>{user.emailId}</TableCell>\r\n                                            <TableCell>{user.username}</TableCell>\r\n                                            <TableCell>\r\n                                                <Switch checked={user.isPermitted === 1 ? true : false} onChange={() => {\r\n                                                    changePermission(user, user.isPermitted === 1 ? 0 : 1)\r\n\r\n                                                }} />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\nimport Landing from './components/Landing/Landing';\nimport UserHome from './components/User/UserHome';\nimport AdminHome from './components/Admin/AdminHome'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/user\" component={UserHome} />\n        <Route exact path=\"/admin\" component={AdminHome} />\n        <Route path=\"*\" component={Landing} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}